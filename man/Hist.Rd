% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Hist.R
\name{Hist}
\alias{Hist}
\title{An Alternative Histogram Function}
\usage{
Hist(
  x,
  breaks = "Sturges",
  ylog = F,
  xlab = NULL,
  ylab = "Counts",
  bound = T,
  ...
)
}
\arguments{
\item{x}{Numeric vector of values to be histogramed.}

\item{breaks}{one of:
    \itemize{
      \item a vector giving the breakpoints between histogram cells,
      \item a function to compute the vector of breakpoints,
      \item a single number giving the number of cells for the histogram,
      \item a character string naming an algorithm to compute the
      number of cells (see \sQuote{Details}),
      \item a function to compute the number of cells.
    }
    In the last three cases the number is a suggestion only; as the
    breakpoints will be set to \code{\link{pretty}} values, the number
    is limited to \code{1e6} (with a warning if it was larger).  If
    \code{breaks} is a function, the \code{x} vector is supplied to it
    as the only argument (and the number of breaks is only limited by
    the amount of available memory).
  }

\item{ylog}{Logical or numeric, controlling whether y-axis is logged.  If TRUE,
\code{log(counts+1, 10)} is plotted; use integer to specify the base.  
Default is FALSE (linear y-axis).}

\item{xlab, ylab}{Character values; labels for the x- and y-axes}

\item{bound}{Logical value.  If TRUE, values outside the range of breaks are added to 
the extreme bins; otherwise, they are excluded.  Ignored if 
length(breaks)==1.}

\item{...}{Other plotting arguments passed to \code{\link[graphics]{barplot}} or
\code{\link[graphics]{axis}} as appropriate (see also
\code{\link[graphics]{plot.default}}).}
}
\value{
Returns a histogram object, like what is returned by the 
   \code{\link[graphics]{hist}} function, but with additional elements:
   \itemize{
     \item \strong{xbin} (or \strong{ybin} if horiz=T): 
       A function that accepts a single argument. If numeric, the values are 
       converted to bin number.  This allows you to add more lines, points, 
       etc to the plot, by passing x.bin(x) instead of  x to the plotting 
       function.
     \item \strong{xlim}: x-axis limits of plot ("true" limits, in bins; to 
       get the limits in terms of the input data, use: 
       \code{range(this.hist$breaks))}.
     \item \strong{ylim}: y-axis limits of the plot.
     \item \strong{xname, yname}: character string with the x- and y-labels.
     \item \strong{logcounts}: The logged counts + 1, in the base specified 
       (only if ylog argument is not FALSE).
     \item \strong{logbase}: The base used for logcounts.
   }
}
\description{
Hist generates a histogram with better (IMNSHO) defaults than the 
\code{\link[graphics]{hist}}() function.
}
\details{
The behavior of Hist() is very similar to \code{\link[graphics]{hist}}(),
but with the following differences:
\itemize{
  \item Values may be outside the range of the breaks specified (bound 
    argument determines how they are handled).
  \item By default, the bars are gray.
  \item The axes extend to the limits of the plot, and are not displaced 
    from the plot.
  \item Permits you to plot the log counts via the ylog argument.
  \item  The optional "add" argument, if true, prevents labels or axes from 
    being drawn.  To make this work, you should pass 
    \code{breaks=this.hist$breaks} from the previous call in order to use 
    the same bins.
  \item If the optional argument horiz=TRUE, the bars will be plotted 
    horizontally.  The y-axis will then be treated as the x- and vice versa
    with regards to labeling, limits, etc. (i.e., xlabel will be used to 
    label the y-axis).  Note that the names of the list returned are also 
    "flipped", so that this.hist$ylim is really the y-axis limits, etc.
}
}
\examples{
# plot normally distributed random numbers, with y-axis logged
this.hist <- Hist(rnorm(10000), 40, ylog=TRUE)
# vertical lines at +/-2
abline(v=this.hist$xbin(c(-2, 2)), col="red", lty=3, lwd=2)
# plot it again, without logging the y-axis
this.hist <- Hist(rnorm(10000), 40)
# for comparison, look at the standard histogram function
plot(this.hist)

}
\seealso{
\code{\link[graphics]{plot.default}}, \code{\link[graphics]{par}}, 
  \code{\link[graphics]{axis}} for more details about plotting options, as
  well as \code{\link[graphics]{barplot}} and \code{\link[graphics]{hist}},
}
\author{
M.W.Rowe, \email{mwr.stats@gmail.com}
}
